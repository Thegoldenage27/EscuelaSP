

package formularios;


import conexionSQL.Conexion;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.*;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author LeonS
 */
public class sistema1 extends javax.swing.JFrame {

    /**
     * Creates new form sistema
     */
    Conexion cc=new Conexion();
    Connection con=cc.getConnection();
   
    
    
    public sistema1() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(getBackground());
        mostrarDatos();
        
    }
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCalificacion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        cbMateria = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbEstatus = new javax.swing.JComboBox<>();
        txtNuevo = new javax.swing.JButton();
        txtGuardar = new javax.swing.JButton();
        txtEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        btnAprobados = new javax.swing.JButton();
        btnReprobados = new javax.swing.JButton();

        setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 153, 51));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Nombre");

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Calificacion");

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Apellidos");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Materia");

        txtApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidosActionPerformed(evt);
            }
        });

        cbMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Diseño de Bases de Datos", "Construccion de la Base de Datos", "Programacion y conultas de Bases de Datos", "Programacion Avanzada de Bases de Datos", "Administracion de la Base de Datos", "Seguridad de las Bases de Datos", "Conectividad a las Bases de Datos", "MAnejadores de Bases de Datos", "Matematicas", "Español", "Ingles", "Programación", "Geografia", " " }));
        cbMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMateriaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Estatus");

        cbEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aprobado", "Reprobado" }));

        txtNuevo.setText("Nuevo");
        txtNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNuevoActionPerformed(evt);
            }
        });

        txtGuardar.setText("Guardar");
        txtGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGuardarActionPerformed(evt);
            }
        });

        txtEliminar.setText("Eliminar");
        txtEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(cbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCalificacion)
                                    .addComponent(cbEstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNuevo)
                    .addComponent(txtGuardar)
                    .addComponent(txtEliminar)
                    .addComponent(btnActualizar))
                .addGap(75, 75, 75))
        );

        jLabel7.setText("Buscar:");

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaAlumnos.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tablaAlumnosAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tablaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAlumnos);

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        btnAprobados.setText("Alumnos Aprobados");
        btnAprobados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprobadosActionPerformed(evt);
            }
        });

        btnReprobados.setText("Alumnos Reprobados");
        btnReprobados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReprobadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnAprobados)
                        .addGap(92, 92, 92)
                        .addComponent(btnReprobados))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 326, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAprobados)
                    .addComponent(btnReprobados))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidosActionPerformed

    private void cbMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMateriaActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cbMateriaActionPerformed

    private void txtNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNuevoActionPerformed
        // TODO add your handling code here:
        limpiarCajas();
       
    }//GEN-LAST:event_txtNuevoActionPerformed

    private void txtGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGuardarActionPerformed
        insertarDatos();
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_txtGuardarActionPerformed
   
    
    public void filtrarDatos(String valor){
        
            String[] titulos={"ID","Nombre","Apellidos","Materia","Calificacion", "Estatus"};
            String[] registros=new String[7];

            DefaultTableModel modelo=new DefaultTableModel(null,titulos);
            String SQL="SELECT * FROM alumnos WHERE nombre like '%"+valor+"%'";

        try{
            
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(SQL);
           
           while (rs.next()){
               
               registros[0]=rs.getString("idalumnos");
               registros[1]=rs.getString("nombre");
               registros[2]=rs.getString("apellidos");
               registros[3]=rs.getString("materia");
               registros[4]=rs.getString("calificacion");
               registros[5]=rs.getString("estatus");
               
               modelo.addRow(registros);
            }
               tablaAlumnos.setModel(modelo);
           
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error al mostrar Datos" +e.getMessage());
        }   
     }
    
    
    
    public void mostrarDatos(){
        
            String[] titulos={"ID","Nombre","Apellidos","Materia","Calificacion", "Estatus"};
            String[] registros=new String[7];

            DefaultTableModel modelo=new DefaultTableModel(null,titulos);
            String SQL="SELECT * FROM alumnos";

        try{
            
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(SQL);
           
           while (rs.next()){
               
               registros[0]=rs.getString("idalumnos");
               registros[1]=rs.getString("nombre");
               registros[2]=rs.getString("apellidos");
               registros[3]=rs.getString("materia");
               registros[4]=rs.getString("calificacion");
               registros[5]=rs.getString("estatus");
               
               modelo.addRow(registros);
            }
               tablaAlumnos.setModel(modelo);
           
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error al mostrar Datos" +e.getMessage());
        }   
     }
         
     
    
    public void limpiarCajas(){
            txtNombre.setText("");
            txtApellidos.setText("");
            txtCalificacion.setText("");
            cbEstatus.setSelectedItem("null");
            cbMateria.setSelectedItem("null");
        }
    
    
    
    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
}
   
        private void ActualizarDatos(){
                try{
                    String SQL="UPDATE alumnos set nombre=?,apellidos=?,materia=?,calificacion=?,estatus=? WHERE idalumnos=?";

                    int filaSeleccionado=tablaAlumnos.getSelectedRow();
                String dao=(String)tablaAlumnos.getValueAt(filaSeleccionado, 0);
                PreparedStatement pst=(PreparedStatement) con.prepareStatement(SQL);


                pst.setString(1,txtNombre.getText() );
                pst.setString(2,txtApellidos.getText());

                int seleccionado=cbMateria.getSelectedIndex();
                pst.setString(3, cbMateria.getItemAt(seleccionado));

                pst.setDouble(4, Double.parseDouble(txtCalificacion.getText()));

                int seleccionado1=cbEstatus.getSelectedIndex();
                pst.setString(5, cbEstatus.getItemAt(seleccionado1));

                pst.setString(6,dao);
                pst.execute();

                JOptionPane.showMessageDialog(null, "Registro Editado Exitoso");

            }catch (Exception e){
               JOptionPane.showMessageDialog(null, "Error de Edición" +e.getMessage());
            }
    }
    
    
    
    
    
    private void insertarDatos(){
            try{
                String SQL="INSERT INTO alumnos (nombre,apellidos,materia,calificacion,estatus) VALUES(?,?,?,?,?)";
                PreparedStatement pst=(PreparedStatement) con.prepareStatement(SQL);
            
                     
        pst.setString(1,txtNombre.getText() );
        pst.setString(2,txtApellidos.getText());
        
        int seleccionado=cbMateria.getSelectedIndex();
        pst.setString(3, cbMateria.getItemAt(seleccionado));
        
        pst.setDouble(4, Double.parseDouble(txtCalificacion.getText()));
        
        int seleccionado1=cbEstatus.getSelectedIndex();
        pst.setString(5, cbEstatus.getItemAt(seleccionado1));
        
        pst.execute();
        
        JOptionPane.showMessageDialog(null, "Registro Exitoso");
            
            
            
            
            }catch (Exception e){
               JOptionPane.showMessageDialog(null, "Error de Registro" +e.getMessage());
            }
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void tablaAlumnosAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tablaAlumnosAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaAlumnosAncestorAdded

    private void tablaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlumnosMouseClicked
        
        int filaSeleccionada=tablaAlumnos.rowAtPoint(evt.getPoint());
        
        txtNombre.setText(tablaAlumnos.getValueAt(filaSeleccionada, 1).toString());
        txtApellidos.setText(tablaAlumnos.getValueAt(filaSeleccionada, 2).toString());
        cbMateria.setSelectedItem(tablaAlumnos.getValueAt(filaSeleccionada, 3));
        txtCalificacion.setText(tablaAlumnos.getValueAt(filaSeleccionada, 4).toString());
        cbEstatus.setSelectedItem(tablaAlumnos.getValueAt(filaSeleccionada, 5));
        
    }//GEN-LAST:event_tablaAlumnosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        ActualizarDatos();
        mostrarDatos();
        limpiarCajas();
      
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEliminarActionPerformed
        eliminarRegistros();
        mostrarDatos();
        limpiarCajas();
    }//GEN-LAST:event_txtEliminarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        filtrarDatos(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnAprobadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprobadosActionPerformed
         // Mostrar solo los alumnos con estatus "Aprobado"
    String[] titulos = {"ID", "Nombre", "Apellidos", "Materia", "Calificacion", "Estatus"};
    String[] registros = new String[7];

    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    String SQL = "SELECT * FROM alumnos WHERE estatus = 'Aprobado'";

    try {
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(SQL);

        while (rs.next()) {
            registros[0] = rs.getString("idalumnos");
            registros[1] = rs.getString("nombre");
            registros[2] = rs.getString("apellidos");
            registros[3] = rs.getString("materia");
            registros[4] = rs.getString("calificacion");
            registros[5] = rs.getString("estatus");

            modelo.addRow(registros);
        }
        tablaAlumnos.setModel(modelo);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al mostrar Datos" + e.getMessage());
    }
  
            
    }//GEN-LAST:event_btnAprobadosActionPerformed

    private void btnReprobadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReprobadosActionPerformed
             // Mostrar solo los alumnos con estatus "Reprobado"
    String[] titulos = {"ID", "Nombre", "Apellidos", "Materia", "Calificacion", "Estatus"};
    String[] registros = new String[7];

    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    String SQL = "SELECT * FROM alumnos WHERE estatus = 'Reprobado'";

    try {
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(SQL);

        while (rs.next()) {
            registros[0] = rs.getString("idalumnos");
            registros[1] = rs.getString("nombre");
            registros[2] = rs.getString("apellidos");
            registros[3] = rs.getString("materia");
            registros[4] = rs.getString("calificacion");
            registros[5] = rs.getString("estatus");

            modelo.addRow(registros);
        }
        tablaAlumnos.setModel(modelo);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al mostrar Datos" + e.getMessage());
    }
    }//GEN-LAST:event_btnReprobadosActionPerformed
 
    
    
    private void eliminarRegistros(){
        
        int filaSeleccionada=tablaAlumnos.getSelectedRow();
        
        try {
             String SQL="DELETE FROM alumnos WHERE idalumnos="+tablaAlumnos.getValueAt(filaSeleccionada, 0);
             
             Statement st=con.createStatement();
             
             int n=st.executeUpdate(SQL);
             
             if (n>=0) {
                 JOptionPane.showMessageDialog(null, "Registro Eliminado");
             }
        
        } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al Eliminar Registros...!!"+ e.getMessage());
            }
        
    }
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sistema1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sistema1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sistema1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sistema1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sistema1().setVisible(true);
            }
        });
    }
    
            

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAprobados;
    private javax.swing.JButton btnReprobados;
    private javax.swing.JComboBox<String> cbEstatus;
    private javax.swing.JComboBox<String> cbMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCalificacion;
    private javax.swing.JButton txtEliminar;
    private javax.swing.JButton txtGuardar;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JButton txtNuevo;
    // End of variables declaration//GEN-END:variables
}
